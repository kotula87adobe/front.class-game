{"version":3,"sources":["logo.svg","Layouts/LoginForm.js","Layouts/SignForm.js","Layouts/Checkout.js","Game/Exercises/multiplication.js","Moje/BigForm.js","Moje/CustomContainer.js","Context.js","Provider.js","Game/Components/Exercise.js","Game/Components/Buttons.js","Game/Game.js","App.js","reportWebVitals.js","index.js"],"names":["makeStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","layout","marginBottom","padding","breakpoints","up","stepper","buttons","button","marginLeft","GreenSwitch","withStyles","switchBase","color","green","checked","track","Switch","BigForm","useState","name","surname","email","remember","day","hour","reason","gender","formData","setFormData","handleData","target","console","log","type","prevState","value","Typography","component","variant","align","data-testid","Grid","container","item","xs","sm","lg","TextField","fullWidth","label","onInput","id","FormControlLabel","control","Checkbox","onClick","md","FormControl","InputLabel","Select","role","labelId","onChange","MenuItem","multiple","renderValue","selected","join","indexOf","ListItemText","primary","map","val","FormLabel","RadioGroup","aria-label","Radio","FormGroup","Button","ButtonGroup","useStyle","CustomContainer","CssBaseline","Container","fixed","Paper","className","elevation","Context","createContext","multiplication","i","j","push","first","sign","second","result","MyProvider","props","exercise","setExercise","answer","setAnswer","setChecked","handleActiveExercise","_","sample","useEffect","Provider","data","methods","constants","children","useStyles","root","fontSize","Exercise","minWidth","lineHeight","icon","refresh","position","right","bottom","zIndex","Buttons","numbers","toString","length","handleClick","style","empty","correct","border","wrong","Game","classes","ContextData","useContext","minHeight","justifyContent","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kOAAe,I,4HC4BGA,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBC,OAAQ,CACJC,OAAQR,EAAMG,QAAQ,GACtBM,gBAAiBT,EAAMU,QAAQC,UAAUC,MAE7CC,KAAM,CACFC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE7BY,OAAQ,CACJP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,QC/BlBJ,aAAW,SAACC,GAAD,MAAY,CACrCC,MAAO,CACHC,UAAWF,EAAMG,QAAQ,GACzBC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEhBO,KAAM,CACFC,MAAO,OACPZ,UAAWF,EAAMG,QAAQ,IAE7BY,OAAQ,CACJP,OAAQR,EAAMG,QAAQ,EAAG,EAAG,Q,kECLlBJ,aAAW,SAACC,GAAD,MAAY,CAIrCgB,OAAQ,GAURf,MAAM,aACFC,UAAWF,EAAMG,QAAQ,GACzBc,aAAcjB,EAAMG,QAAQ,GAC5Be,QAASlB,EAAMG,QAAQ,IACtBH,EAAMmB,YAAYC,GAAG,IAAyB,EAAnBpB,EAAMG,QAAQ,IAAU,CAChDD,UAAWF,EAAMG,QAAQ,GACzBc,aAAcjB,EAAMG,QAAQ,GAC5Be,QAASlB,EAAMG,QAAQ,KAG/BkB,QAAS,CACLH,QAASlB,EAAMG,QAAQ,EAAG,EAAG,IAEjCmB,QAAS,GAITC,OAAQ,CACJrB,UAAWF,EAAMG,QAAQ,GACzBqB,WAAYxB,EAAMG,QAAQ,QCjDlC,I,8HCqBMsB,EAAcC,YAAW,CAC3BC,WAAY,CACRC,MAAOC,IAAM,KACb,YAAa,CACTD,MAAOC,IAAM,MAEjB,qBAAsB,CAClBpB,gBAAiBoB,IAAM,OAG/BC,QAAS,GACTC,MAAO,IAXSL,CAYjBM,KA6RYC,EA3RC,WAAO,IAAD,EAEcC,mBAAS,CACrCC,KAAM,GACNC,QAAS,GACTC,MAAO,GACPC,UAAU,EACVC,IAAK,GACLC,KAAM,GACNC,OAAQ,GACRC,OAAQ,GACRd,MAAO,GACPL,OAAQ,KAZM,mBAEXoB,EAFW,KAEDC,EAFC,KAeZC,EAAa,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAEjBC,QAAQC,IAAIF,GAEQ,aAAhBA,EAAOG,MAAuC,UAAhBH,EAAOX,KACrCS,GAAY,SAAAM,GAAS,kCACdA,GADc,kBAEhBJ,EAAOX,MAAQe,EAAUJ,EAAOX,WAGrCS,GAAY,SAAAM,GAAS,kCACdA,GADc,kBAEhBJ,EAAOX,KAAOW,EAAOK,YAKlC,OACI,qCACI,cAACC,EAAA,EAAD,CACIC,UAAW,KACXC,QAAS,KACTC,MAAO,SAHX,sBAOA,uBAAMC,cAAY,OAAlB,UACI,eAACC,EAAA,EAAD,CAAMC,WAAS,EAACvD,QAAS,EAAzB,UACI,cAACsD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACC,EAAA,EAAD,CACIC,WAAS,EACT7B,KAAM,OACN8B,MAAO,OACPC,QAASrB,EACTM,MAAOR,EAASR,SAIxB,cAACsB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACC,EAAA,EAAD,CACIC,WAAS,EACT7B,KAAM,UACN8B,MAAO,UACPC,QAASrB,EACTM,MAAOR,EAASP,YAGxB,cAACqB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACC,EAAA,EAAD,CACIC,WAAS,EACT7B,KAAM,QACN8B,MAAO,QACPC,QAASrB,EACTM,MAAOR,EAASN,aAI5B,eAACoB,EAAA,EAAD,CAAMC,WAAS,EAACvD,QAAS,EAAzB,UACI,cAACsD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACV,EAAA,EAAD,CAAYe,GAAI,YAAad,UAAW,IAAKC,QAAS,KAAtD,SACKX,EAASR,SAIlB,cAACsB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACV,EAAA,EAAD,CAAYC,UAAW,IAAKC,QAAS,KAArC,SACKX,EAASP,YAGlB,cAACqB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACV,EAAA,EAAD,CAAYC,UAAW,IAAKC,QAAS,KAArC,SACKX,EAASN,aAKtB,cAACoB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAACQ,EAAA,EAAD,CACIC,QACI,cAACC,EAAA,EAAD,CACIxC,QAASa,EAASL,SAClBV,MAAO,UACPuB,MAAO,WACPhB,KAAM,WACNoC,QAAS1B,IAGjBoB,MAAM,mBAGd,eAACR,EAAA,EAAD,CAAMC,WAAS,EAACvD,QAAS,EAAzB,UACI,cAACsD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGW,GAAI,EAA9B,SACI,eAACC,EAAA,EAAD,CACIT,WAAS,EADb,UAII,cAACU,EAAA,EAAD,CAAYP,GAAI,YAAhB,iBACA,eAACQ,EAAA,EAAD,CACIC,KAAM,UACNzC,KAAM,MACN0C,QAAS,YACTV,GAAI,aACJW,SAAUjC,EACVM,MAAOR,EAASJ,IANpB,UAQI,cAACwC,EAAA,EAAD,CAAU5B,MAAO,EAAjB,oBACA,cAAC4B,EAAA,EAAD,CAAU5B,MAAO,EAAjB,qBACA,cAAC4B,EAAA,EAAD,CAAU5B,MAAO,EAAjB,+BAIZ,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGW,GAAI,EAA9B,SACI,eAACC,EAAA,EAAD,CAAaT,WAAS,EAAtB,UACI,cAACU,EAAA,EAAD,CAAYP,GAAI,aAAhB,kBACA,eAACQ,EAAA,EAAD,CACIK,UAAQ,EACRJ,KAAM,UACNzC,KAAM,OACN0C,QAAS,aACTV,GAAI,cACJW,SAAUjC,EACVM,MAAOR,EAASH,KAPpB,UASI,cAACuC,EAAA,EAAD,CAAU5B,MAAO,GAAjB,gBACA,cAAC4B,EAAA,EAAD,CAAU5B,MAAO,GAAjB,gBACA,cAAC4B,EAAA,EAAD,CAAU5B,MAAO,GAAjB,wBAIZ,cAACM,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGW,GAAI,EAA9B,SACI,eAACC,EAAA,EAAD,CAAaT,WAAS,EAAtB,UACI,cAACU,EAAA,EAAD,CAAYP,GAAI,eAAhB,oBACA,eAACQ,EAAA,EAAD,CACIK,UAAQ,EACRJ,KAAM,UACNzC,KAAM,SACN0C,QAAS,eACTV,GAAI,gBACJW,SAAUjC,EACVM,MAAOR,EAASF,OAChBwC,YAAa,SAACC,GAAD,OAAcA,EAASC,KAAK,OAR7C,UAUI,eAACJ,EAAA,EAAD,CAAU5B,MAAO,cAAjB,UACI,cAACmB,EAAA,EAAD,CAAUxC,QAASa,EAASF,OAAO2C,QAAQ,gBAAkB,IAC7D,cAACC,EAAA,EAAD,CAAcC,QAAS,mBAE3B,eAACP,EAAA,EAAD,CAAU5B,MAAO,gBAAjB,UACI,cAACmB,EAAA,EAAD,CAAUxC,QAASa,EAASF,OAAO2C,QAAQ,kBAAoB,IAC/D,cAACC,EAAA,EAAD,CAAcC,QAAS,qBAE3B,eAACP,EAAA,EAAD,CAAU5B,MAAO,OAAjB,UACI,cAACmB,EAAA,EAAD,CAAUxC,QAASa,EAASF,OAAO2C,QAAQ,SAAW,IACtD,cAACC,EAAA,EAAD,CAAcC,QAAS,uBAM3C,eAAC7B,EAAA,EAAD,CAAMC,WAAS,EAACvD,QAAS,EAAzB,UACI,cAACsD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACV,EAAA,EAAD,CAAYe,GAAI,YAAad,UAAW,IAAKC,QAAS,KAAtD,SACKX,EAASJ,QAIlB,cAACkB,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACV,EAAA,EAAD,CAAYC,UAAW,IAAKC,QAAS,KAArC,SAEQX,EAASH,KAAK+C,KAAI,SAAAC,GAAG,OAAIA,EAAM,YAI3C,cAAC/B,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,cAACV,EAAA,EAAD,CAAYC,UAAW,IAAKC,QAAS,KAArC,SAEQX,EAASF,OAAO8C,KAAI,SAAAC,GAAG,OAAIA,EAAM,eAKjD,eAAC/B,EAAA,EAAD,CAAMC,WAAS,EAACvD,QAAS,EAAzB,UACI,cAACsD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,eAACW,EAAA,EAAD,CAAaT,WAAS,EAACX,UAAW,WAAlC,UACI,cAACoC,EAAA,EAAD,CAAWpC,UAAW,SAAtB,oBACA,eAACqC,EAAA,EAAD,CACIC,aAAY,SACZxD,KAAM,SACNgB,MAAOR,EAASD,OAChBoC,SAAUjC,EAJd,UAMI,cAACuB,EAAA,EAAD,CAAkBjB,MAAO,SAAUkB,QAAS,cAACuB,EAAA,EAAD,IAAU3B,MAAO,WAC7D,cAACG,EAAA,EAAD,CAAkBjB,MAAO,OAAQkB,QAAS,cAACuB,EAAA,EAAD,IAAU3B,MAAO,iBAIvE,cAACR,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,SACI,eAAC+B,EAAA,EAAD,WACI,cAACzB,EAAA,EAAD,CAAkBC,QACd,cAACrC,EAAA,EAAD,CACIG,KAAM,QACNP,MAAO,GACPuB,MAAO,MACP2B,SAAUjC,EACVf,QAA4B,QAAnBa,EAASf,QAERqC,MAAO,QAEzB,cAACG,EAAA,EAAD,CAAkBC,QACd,cAACrC,EAAA,EAAD,CACIG,KAAM,QACNP,MAAO,GACPuB,MAAO,OACP2B,SAAUjC,EACVf,QAA4B,SAAnBa,EAASf,QAERqC,MAAO,SAEzB,cAACG,EAAA,EAAD,CAAkBC,QACd,cAAC5C,EAAD,CACIU,KAAM,QACNP,MAAO,GACPuB,MAAO,QACP2B,SAAUjC,EACVf,QAA4B,UAAnBa,EAASf,QAERqC,MAAO,eAIjC,eAACR,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAA9B,UACI,cAACgC,EAAA,EAAD,CAAQxC,QAAQ,WAAW1B,MAAO,UAAW2C,QAAS,WAAK1B,EAAW,CAACV,KAAK,SAASW,OAAO,CAACK,MAAO,cAApG,qBAEA,eAAC4C,EAAA,EAAD,CAAanE,MAAM,UAAU+D,aAAW,gCAAxC,UACI,cAACG,EAAA,EAAD,CAAQvB,QAAS,WAAK1B,EAAW,CAACC,OAAO,CAACX,KAAK,SAASgB,MAAO,cAA/D,iBACA,cAAC2C,EAAA,EAAD,CAAQvB,QAAS,WAAK1B,EAAW,CAACC,OAAO,CAACX,KAAK,SAASgB,MAAO,cAA/D,iBACA,cAAC2C,EAAA,EAAD,CAAQvB,QAAS,WAAK1B,EAAW,CAACC,OAAO,CAACX,KAAK,SAASgB,MAAO,cAA/D,sBAEHR,EAASpB,oBCnR5ByE,EAAWjG,aAAW,SAAAC,GAAK,MAC7B,CACIC,MAAO,CACHiB,QAASlB,EAAMG,QAAQ,QA4BpB8F,EAvBS,WAAO,IAEpBhG,EAAS+F,IAAT/F,MAEP,OACI,qCACI,cAACiG,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAW9C,UAAW,OAAQ+C,OAAK,EAAnC,SACI,cAACC,EAAA,EAAD,CACIC,UAAWrG,EACXqD,QAAS,YACTiD,UAAW,EAHf,SAKI,cAAC,EAAD,YCjCLC,EAFC,IAAIC,gB,0BHFhBC,EAAiB,GAIZC,EAAE,EAAGA,GAAI,GAAIA,IAClB,IAAI,IAAIC,EAAE,EAAGA,GAAI,GAAIA,IACdD,EAAEC,GAAG,IACJF,EAAeG,KAAK,CAChBC,MAAOH,EACPI,KAAM,OACNC,OAAQJ,EACRK,OAAQN,EAAEC,IIH1B,IA4CeM,EA5CI,SAACC,GAAW,IAAD,EAEUjF,mBAAS,IAFnB,mBAEfkF,EAFe,KAELC,EAFK,OAIMnF,mBAAS,IAJf,mBAIfoF,EAJe,KAIPC,EAJO,OAKQrF,oBAAS,GALjB,mBAKfJ,EALe,KAKN0F,EALM,KAOhBC,EAAuB,WAEzBF,EAAU,IACVC,GAAW,GACXH,EAAYK,IAAEC,OAAOjB,KAWzB,OARAkB,qBAAU,WACNH,MACF,IAEFG,qBAAU,WACNJ,GAAW,KACb,CAACF,IAGC,cAAC,EAAQO,SAAT,CAAkB1E,MAAO,CACrB2E,KAAM,CACFV,WACAE,SACAxF,WAEJiG,QAAS,CACLR,YACAC,aACAC,wBAEJO,UAAW,IAXf,SAeKb,EAAMc,YC3CjBC,EAAYnI,aAAW,SAACC,GAAD,MAAY,CACrCmI,KAAM,CACFjH,QAAS,QAEbkG,SAAU,CACNgB,SAAU,aAkBHC,EAdE,SAAC,GAAwC,IAAvCvB,EAAsC,EAAtCA,MAAMC,EAAgC,EAAhCA,KAAKC,EAA2B,EAA3BA,OAAeM,GAAY,EAApBL,OAAoB,EAAZK,QAAY,EAE5BY,IAAlBC,EAF8C,EAE9CA,KAAMf,EAFwC,EAExCA,SAEb,OACI,qBAAKd,UAAW6B,EAAhB,SACI,eAAC/E,EAAA,EAAD,CAAYkD,UAAWc,EAAU/D,UAAW,KAAME,MAAO,SAAzD,UACKuD,EADL,IACaC,EADb,IACoBC,EADpB,MAC+BM,Q,sDCVrCY,GAAYnI,aAAW,SAACC,GAAD,MAAY,CACrCmI,KAAM,CACF/H,QAAS,OACTC,cAAe,SACfC,WAAY,SACZ,QAAS,CACLE,OAAQR,EAAMG,QAAQ,KAG9BoB,OAAQ,CACJ6G,SAAU,OACVE,SAAU,OACVpH,QAAS,OACT,SAAU,CACNqH,WAAY,IAGpBC,KAAM,CACFJ,SAAU,SAEdK,QAAS,CACLC,SAAU,WACVC,MAAO,MACPC,OAAQ,MACRC,OAAQ,GACR,QAAS,CACLT,SAAU,aAyCPU,GApCC,SAAC,GAAiE,IAAhEC,EAA+D,EAA/DA,QAAQzB,EAAuD,EAAvDA,OAAQC,EAA+C,EAA/CA,UAAWC,EAAoC,EAApCA,WAAYC,EAAwB,EAAxBA,qBAAwB,EAEvCS,KAA/BC,EAFsE,EAEtEA,KAAM5G,EAFgE,EAEhEA,OAAQiH,EAFwD,EAExDA,KAAMC,EAFkD,EAElDA,QASrBnH,EAAUyH,EAAQxD,KAAI,SAACC,EAAImB,GAAL,OAAS,cAACb,EAAA,EAAD,CAAQQ,UAAW/E,EAAgBgD,QAAS,YAP7D,SAACiB,GAEd8B,EAAO0B,WAAWC,QAAU,GAE/B1B,EAAUD,EAAS9B,GAG+D0D,CAAY1D,IAA7D,SAAqEA,GAArCmB,MAErE,OACI,sBAAKL,UAAW6B,EAAhB,UACI,cAACpC,EAAA,EAAD,CAAazC,QAAQ,YAAY1B,MAAM,UAAU+D,aAAW,iCAA5D,SACKrE,IAEL,eAACyE,EAAA,EAAD,CAAczC,QAAQ,OAAtB,UACI,cAACwC,EAAA,EAAD,CAAQvB,QAAS,WAAKiD,GAAW,IAAjC,SACI,cAAC,IAAD,CAAiB2B,MAAO,CAACvH,MAAO,aAAc0E,UAAWkC,MAE7D,cAAC1C,EAAA,EAAD,CAAQvB,QAAS,kBAAIgD,EAAU,KAA/B,SACI,cAAC,IAAD,CAAe4B,MAAO,CAACvH,MAAO,OAAQ0E,UAAWkC,SAIzD,cAAC1C,EAAA,EAAD,CAAQQ,UAAWmC,EAASlE,QAASkD,EAArC,SACI,cAAC,KAAD,CAAY7F,MAAO,kBC1D7BoE,GAAWjG,aAAW,SAAAC,GAAK,MAAG,CAChCC,MAAO,CACHiB,QAASlB,EAAMG,QAAQ,IAE3BiJ,MAAO,GAGPC,QAAS,CACL5I,gBAAiB,YACjB6I,OAAQ,mBAEZC,MAAO,CACH9I,gBAAiB,YACjB6I,OAAQ,qBA4DDE,GAxDF,WAET,IAAMC,EAAUzD,KACT/F,EAAS+F,KAAT/F,MAEDyJ,EAAcC,qBAAWnD,GACxBsB,EAAQ4B,EAAR5B,KACAC,EAAW2B,EAAX3B,QAgBP,OACI,qCACI,cAAC7B,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAW9C,UAAW,OAAQ+C,OAAK,EAAnC,SACI,cAACC,EAAA,EAAD,CACIC,UAAWrG,EAAQ,IAAMwJ,EAjBlB,KAAhB3B,EAAKR,SAAgC,IAAfQ,EAAKhG,QACnB,QAEHgG,EAAKR,SAAWQ,EAAKV,SAASH,OAAO+B,WAClC,UAGA,SAWC1F,QAAS,YACTiD,UAAW,EAHf,SAKI,eAAC9C,EAAA,EAAD,CAAMC,WAAS,EAAf,UACI,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,EAAD,2BACQkE,EAAKV,UADb,IAEIE,OAAQQ,EAAKR,YAGrB,cAAC7D,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GAAf,SACI,cAAC,GAAD,CACImF,QAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAC5BzB,OAAQQ,EAAKR,OACbC,UAAWQ,EAAQR,UACnBC,WAAYO,EAAQP,WACpBC,qBAAsBM,EAAQN,oCC/CxDS,GAAYnI,aAAW,SAACC,GAAD,MAAY,CACrCmI,KAAM,CACFyB,UAAW,QACXxJ,QAAS,OACTyJ,eAAgB,SAChBvJ,WAAY,cAkCLwJ,OA7Bf,WAAgB,IAEN3B,EAAQD,KAARC,KAER,OACE,qBAAK7B,UAAW6B,EAAhB,SAKE,cAAC,EAAD,UAEI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO4B,OAAK,EAACC,KAAM,IAAnB,SACI,cAAC,GAAD,MAEJ,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAM,QAAnB,SACI,cAAC,EAAD,gBCzCPC,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,MAEFC,SAASC,eAAe,SAM1Bb,O","file":"static/js/main.abdd92d4.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Link from '@material-ui/core/Link';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\n\r\nfunction Copyright() {\r\n    return (\r\n        <Typography variant=\"body2\" color=\"textPrimary\" align=\"center\">\r\n            {'Copyright © '}\r\n            <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                Your Website\r\n            </Link>{' '}\r\n            {new Date().getFullYear()}\r\n            {'.'}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8), //8 * 8 = 64px\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1), // 8px\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function LoginForm() {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Container id=\"main\" component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\"> {/* wstawia h1 z fontem h5 */}\r\n                    Sign in\r\n                </Typography>\r\n                <form className={classes.form} noValidate>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"email\"\r\n                        label=\"Email Address\"\r\n                        name=\"email\"\r\n                        autoComplete=\"email\"\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Remember me\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <Grid container>\r\n                        <Grid item xs>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                Forgot password?\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link href=\"#\" variant=\"body2\">\r\n                                {\"Don't have an account? Sign Up\"}\r\n                            </Link>\r\n                        </Grid>\r\n                    </Grid>\r\n                </form>\r\n            </div>\r\n            <Box mt={8}>\r\n                <Copyright />\r\n            </Box>\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport {Box, Container} from \"@material-ui/core\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\r\nimport {CheckBox} from \"@material-ui/icons\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Link from \"@material-ui/core/Link\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center'\r\n    },\r\n    form: {\r\n        width: '100%',\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}))\r\n\r\nconst SignForm = props => {\r\n\r\n    const classes = useStyles()\r\n\r\n    return (\r\n        <>\r\n            <Container id={'main'} component={'main'} maxWidth={\"xs\"}>\r\n                <CssBaseline/>\r\n                <div className={classes.paper}>\r\n                    <Typography component={'h1'} variant={'h5'}>\r\n                        {'Create new account'}\r\n                    </Typography>\r\n                    <form noValidate>\r\n                        <TextField\r\n                            id={'email'}\r\n                            variant={\"outlined\"}\r\n                            margin={'normal'}\r\n                            fullWidth\r\n                            required\r\n                            name={'email'}\r\n                            label={'Email Address'}\r\n                            autoComplete={'email'}\r\n                        />\r\n                        <TextField\r\n                            id={'password'}\r\n                            variant={\"outlined\"}\r\n                            margin={'normal'}\r\n                            fullWidth\r\n                            required\r\n                            name={'password'}\r\n                            label={'Password'}\r\n                            type={'password'}\r\n                            autoComplete={'current-password'}\r\n                        />\r\n\r\n                        <FormControlLabel\r\n                            control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                            label={'Remember me'}\r\n                        />\r\n                        <Button\r\n                            className={classes.submit}\r\n                            fullWidth\r\n                            type={'submit'}\r\n                            variant={'contained'}\r\n                            color={'primary'}\r\n                        >\r\n                            Sign In\r\n                        </Button>\r\n                        <Grid container>\r\n                            <Grid item xs>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    Forgot password?\r\n                                </Link>\r\n                            </Grid>\r\n                            <Grid item>\r\n                                <Link href=\"#\" variant=\"body2\">\r\n                                    {\"Don't have an account? Sign Up\"}\r\n                                </Link>\r\n                            </Grid>\r\n                        </Grid>\r\n                    </form>\r\n                </div>\r\n\r\n                <Box mt={8}>\r\n                    <Typography variant={\"body2\"} color={\"textPrimary\"} align={\"center\"}>\r\n                        {'Copyright @Michal'}\r\n                    </Typography>\r\n                </Box>\r\n            </Container>\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default SignForm;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Link from '@material-ui/core/Link';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddressForm from './AddressForm';\r\nimport {Container} from \"@material-ui/core\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n// import PaymentForm from './PaymentForm';\r\n// import Review from './Review';\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    // appBar: {\r\n    //     position: 'relative',\r\n    // },\r\n    layout: {\r\n        // width: 'auto',\r\n        // marginLeft: theme.spacing(2),\r\n        // marginRight: theme.spacing(2),\r\n        // [theme.breakpoints.up(600 + theme.spacing(2) * 2)]: {\r\n        //     width: 600,\r\n        //     // marginLeft: 'auto',\r\n        //     // marginRight: 'auto',\r\n        // },\r\n    },\r\n    paper: {\r\n        marginTop: theme.spacing(3),\r\n        marginBottom: theme.spacing(3),\r\n        padding: theme.spacing(2),\r\n        [theme.breakpoints.up(600 + theme.spacing(3) * 2)]: {\r\n            marginTop: theme.spacing(6),\r\n            marginBottom: theme.spacing(6),\r\n            padding: theme.spacing(3),\r\n        },\r\n    },\r\n    stepper: {\r\n        padding: theme.spacing(3, 0, 5),\r\n    },\r\n    buttons: {\r\n        // display: 'flex',\r\n        // justifyContent: 'flex-end',\r\n    },\r\n    button: {\r\n        marginTop: theme.spacing(3),\r\n        marginLeft: theme.spacing(1),\r\n    },\r\n}));\r\n\r\nconst steps = ['Shipping address', 'Payment details', 'Review your order'];\r\n\r\n// function getStepContent(step) {\r\n//     switch (step) {\r\n//         case 0:\r\n//             return <AddressForm />;\r\n//         case 1:\r\n//             return <PaymentForm />;\r\n//         case 2:\r\n//             return <Review />;\r\n//         default:\r\n//             throw new Error('Unknown step');\r\n//     }\r\n// }\r\n\r\nexport default function Checkout() {\r\n    const classes = useStyles();\r\n    const [activeStep, setActiveStep] = React.useState(0);\r\n\r\n    const handleNext = () => {\r\n        setActiveStep(activeStep + 1);\r\n    };\r\n\r\n    const handleBack = () => {\r\n        setActiveStep(activeStep - 1);\r\n    };\r\n\r\n    const Copyright = () => {\r\n        return (\r\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\r\n                {'Copyright © '}\r\n                <Link color=\"inherit\" href=\"https://material-ui.com/\">\r\n                    Your Website\r\n                </Link>{' '}\r\n                {new Date().getFullYear()}\r\n                {'.'}\r\n            </Typography>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <AppBar position=\"relative\" color=\"default\" className={classes.appBar}>\r\n                <Toolbar>\r\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\r\n                        Company name\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n            <Container component={'main'} className={classes.layout} maxWidth={\"lg\"}>\r\n                <Paper className={classes.paper}>\r\n                    <Typography component=\"h1\" variant=\"h4\" align=\"center\">\r\n                        Checkout\r\n                    </Typography>\r\n                    <Stepper activeStep={3} className={classes.stepper}>\r\n                        {steps.map((label) => (\r\n                            <Step key={label}>\r\n                                <StepLabel>{label}</StepLabel>\r\n                            </Step>\r\n                        ))}\r\n                    </Stepper>\r\n                    <React.Fragment>\r\n                        {activeStep === steps.length ? (\r\n                            <React.Fragment>\r\n                                <Typography variant=\"h5\" gutterBottom>\r\n                                    Thank you for your order.\r\n                                </Typography>\r\n                                <Typography variant=\"subtitle1\">\r\n                                    Your order number is #2001539. We have emailed your order confirmation, and will\r\n                                    send you an update when your order has shipped.\r\n                                </Typography>\r\n                            </React.Fragment>\r\n                        ) : (\r\n                            <React.Fragment>\r\n                                {/*{getStepContent(activeStep)}*/}\r\n                                {<AddressForm/>}\r\n\r\n                                <Grid container justify={\"flex-end\"} alignContent={\"flex-end\"}>\r\n                                    {activeStep !== 0 && (\r\n                                        <Button onClick={handleBack} className={classes.button}>\r\n                                            Back\r\n                                        </Button>\r\n                                    )}\r\n                                    <Button\r\n                                        variant=\"contained\"\r\n                                        color=\"primary\"\r\n                                        onClick={handleNext}\r\n                                        className={classes.button}\r\n                                    >\r\n                                        {activeStep === steps.length - 1 ? 'Place order' : 'Next'}\r\n                                    </Button>\r\n                                </Grid>\r\n                            </React.Fragment>\r\n                        )}\r\n                    </React.Fragment>\r\n                </Paper>\r\n                {Copyright()}\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}","let multiplication = [\r\n\r\n]\r\n\r\nfor (let i=4; i <=10; i++){\r\n    for(let j=3; j <=10; j++){\r\n        if(i*j<=50){\r\n            multiplication.push({\r\n                first: i,\r\n                sign: '·',\r\n                second: j,\r\n                result: i*j\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport {multiplication}","/*\r\n* TODO:\r\n*  napisac jakas automatyczna walidacje\r\n* */\r\n\r\nimport React, {useState} from \"react\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nimport {FormControl, FormLabel, Grid, Radio, Typography} from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {MenuOpen} from \"@material-ui/icons\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\nconst GreenSwitch = withStyles({\r\n    switchBase: {\r\n        color: green[300],\r\n        '&$checked': {\r\n            color: green[500],\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: green[500],\r\n        },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n})(Switch)\r\n\r\nconst BigForm = () => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        surname: '',\r\n        email: '',\r\n        remember: true,\r\n        day: '',\r\n        hour: [],\r\n        reason: [],\r\n        gender: '',\r\n        color: '',\r\n        button: '',\r\n    })\r\n\r\n    const handleData = ({target}) => {\r\n\r\n        console.log(target)\r\n\r\n        if (target.type === 'checkbox' && target.name !== 'color') {\r\n            setFormData(prevState => ({\r\n                ...prevState,\r\n                [target.name]: !prevState[target.name]\r\n            }))\r\n        } else {\r\n            setFormData(prevState => ({\r\n                ...prevState,\r\n                [target.name]: target.value\r\n            }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography\r\n                component={\"h1\"}\r\n                variant={\"h4\"}\r\n                align={\"center\"}\r\n            >\r\n                Big Form\r\n            </Typography>\r\n            <form data-testid=\"form\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            name={'name'}\r\n                            label={'name'}\r\n                            onInput={handleData}\r\n                            value={formData.name}\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            name={'surname'}\r\n                            label={'surname'}\r\n                            onInput={handleData}\r\n                            value={formData.surname}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            name={'email'}\r\n                            label={'email'}\r\n                            onInput={handleData}\r\n                            value={formData.email}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <Typography id={'name-text'} component={'p'} variant={\"h6\"}>\r\n                            {formData.name}\r\n                        </Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <Typography component={'p'} variant={\"h6\"}>\r\n                            {formData.surname}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <Typography component={'p'} variant={\"h6\"}>\r\n                            {formData.email}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={formData.remember}\r\n                                color={\"primary\"}\r\n                                value={'remember'}\r\n                                name={'remember'}\r\n                                onClick={handleData}\r\n                            />\r\n                        }\r\n                        label=\"Remember me!\"\r\n                    />\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <FormControl\r\n                            fullWidth\r\n                        >\r\n                            {/*TODO zwykły select*/}\r\n                            <InputLabel id={'day-label'}>Day</InputLabel>\r\n                            <Select\r\n                                role={'listbox'}\r\n                                name={'day'}\r\n                                labelId={'day-label'}\r\n                                id={'select-day'}\r\n                                onChange={handleData}\r\n                                value={formData.day}\r\n                            >\r\n                                <MenuItem value={1}>Monday</MenuItem>\r\n                                <MenuItem value={2}>Tuesday</MenuItem>\r\n                                <MenuItem value={3}>Wednesday</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id={'hour-label'}>Hour</InputLabel>\r\n                            <Select\r\n                                multiple\r\n                                role={'listbox'}\r\n                                name={'hour'}\r\n                                labelId={'hour-label'}\r\n                                id={'select-hour'}\r\n                                onChange={handleData}\r\n                                value={formData.hour}\r\n                            >\r\n                                <MenuItem value={12}>12</MenuItem>\r\n                                <MenuItem value={13}>13</MenuItem>\r\n                                <MenuItem value={14}>14</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id={'reason-label'}>Reason</InputLabel>\r\n                            <Select\r\n                                multiple\r\n                                role={'listbox'}\r\n                                name={'reason'}\r\n                                labelId={'reason-label'}\r\n                                id={'select-reason'}\r\n                                onChange={handleData}\r\n                                value={formData.reason}\r\n                                renderValue={(selected) => selected.join(', ')}\r\n                            >\r\n                                <MenuItem value={'appointment'}>\r\n                                    <Checkbox checked={formData.reason.indexOf('appointment') > -1}/>\r\n                                    <ListItemText primary={'appointment'}/>\r\n                                </MenuItem>\r\n                                <MenuItem value={'special offer'}>\r\n                                    <Checkbox checked={formData.reason.indexOf('special offer') > -1}/>\r\n                                    <ListItemText primary={'special offer'}/>\r\n                                </MenuItem>\r\n                                <MenuItem value={'test'}>\r\n                                    <Checkbox checked={formData.reason.indexOf('test') > -1}/>\r\n                                    <ListItemText primary={'test'}/>\r\n                                </MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <Typography id={'name-text'} component={'p'} variant={\"h6\"}>\r\n                            {formData.day}\r\n                        </Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <Typography component={'p'} variant={\"h6\"}>\r\n                            {\r\n                                formData.hour.map(val => val + ', ')\r\n                            }\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <Typography component={'p'} variant={\"h6\"}>\r\n                            {\r\n                                formData.reason.map(val => val + ', ')\r\n                            }\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <FormControl fullWidth component={'fieldset'}>\r\n                            <FormLabel component={'legend'}>Gender</FormLabel>\r\n                            <RadioGroup\r\n                                aria-label={'gender'}\r\n                                name={'gender'}\r\n                                value={formData.gender}\r\n                                onChange={handleData}\r\n                            >\r\n                                <FormControlLabel value={'female'} control={<Radio/>} label={'Female'}/>\r\n                                <FormControlLabel value={'male'} control={<Radio/>} label={'Male'}/>\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <FormGroup>\r\n                            <FormControlLabel control={\r\n                                <Switch\r\n                                    name={'color'}\r\n                                    color={''}\r\n                                    value={'red'}\r\n                                    onChange={handleData}\r\n                                    checked={formData.color === 'red'}\r\n                                />}\r\n                                              label={'Red'}\r\n                            />\r\n                            <FormControlLabel control={\r\n                                <Switch\r\n                                    name={'color'}\r\n                                    color={''}\r\n                                    value={'blue'}\r\n                                    onChange={handleData}\r\n                                    checked={formData.color === 'blue'}\r\n                                />}\r\n                                              label={'Blue'}\r\n                            />\r\n                            <FormControlLabel control={\r\n                                <GreenSwitch\r\n                                    name={'color'}\r\n                                    color={''}\r\n                                    value={'green'}\r\n                                    onChange={handleData}\r\n                                    checked={formData.color === 'green'}\r\n                                />}\r\n                                              label={'Green'}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <Button variant=\"outlined\" color={\"inherit\"} onClick={()=>{handleData({name:'button',target:{value: 'button1'}})}}>Default</Button>\r\n\r\n                        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n                            <Button onClick={()=>{handleData({target:{name:'button',value: 'button2'}})}}>One</Button>\r\n                            <Button onClick={()=>{handleData({target:{name:'button',value: 'button3'}})}}>Two</Button>\r\n                            <Button onClick={()=>{handleData({target:{name:'button',value: 'button4'}})}}>Three</Button>\r\n                        </ButtonGroup>\r\n                        {formData.button}\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n\r\n\r\n            {/*TODO:  SELECT\r\n                - Dodać style dla wybranych/zaznaczonych opcji\r\n                - ----- zwykły\r\n                - multi\r\n                - z inputem do wybierania\r\n            */}\r\n\r\n            {/*TODO: Dodać radioButtony */}\r\n\r\n\r\n            {/*TODO: Walidacja*/}\r\n\r\n            {/*TODO: Dodać header, footer, menu, sidebar !!!!!!!!!!!!!!  */}\r\n\r\n            {/*TODO: TESTY\r\n                 - czy istnieja inputy/chechboxy z odpowiednim namem\r\n                 - Czy istnieja komponenty np sa 3 <Textfieldy\r\n                 - Czy np formData.name === text w #name-text\r\n            */}\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default BigForm;","/*  TODO:\r\n*   Kontener w ktorym mozna umieszczac kontent : Formularz | Tabela | ??\r\n*   Użyć Paper | Grid  | Typography\r\n*\r\n*   TODO: Zrobić tabele z paginacja (dane tylko z frontu moze)\r\n* */\r\n\r\nimport React from \"react\";\r\n\r\nimport BigForm from \"./BigForm\";\r\n\r\nimport {Container, Grid, makeStyles} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\nconst useStyle = makeStyles(theme => (\r\n    {\r\n        paper: {\r\n            padding: theme.spacing(2)\r\n        }\r\n    }\r\n))\r\n\r\nconst CustomContainer = () => {\r\n\r\n    const {paper} = useStyle()\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container component={'main'} fixed>\r\n                <Paper\r\n                    className={paper}\r\n                    variant={\"elevation\"}\r\n                    elevation={3}\r\n                >\r\n                    <BigForm/>\r\n                </Paper>\r\n\r\n\r\n            </Container>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default CustomContainer;","import React, {createContext} from 'react'\r\n\r\nconst Context = new createContext()\r\n\r\nexport default Context;","import React, {Component, useEffect, useState} from 'react'\r\n\r\nimport Context from \"./Context\";\r\nimport axios from \"axios\";\r\nimport _ from 'lodash';\r\n\r\nimport {multiplication} from \"./Game/Exercises/multiplication\";\r\n\r\nconst MyProvider = (props) => {\r\n\r\n        const [exercise, setExercise] = useState({})\r\n\r\n        const [answer, setAnswer] = useState('')\r\n        const [checked, setChecked] = useState(false)\r\n\r\n        const handleActiveExercise = () => {\r\n\r\n            setAnswer('')\r\n            setChecked(false)\r\n            setExercise(_.sample(multiplication))\r\n        }\r\n\r\n        useEffect(()=>{\r\n            handleActiveExercise()\r\n        },[])\r\n\r\n        useEffect(()=>{\r\n            setChecked(false)\r\n        },[answer])\r\n\r\n        return(\r\n            <Context.Provider value={{\r\n                data: {\r\n                    exercise,\r\n                    answer,\r\n                    checked\r\n                },\r\n                methods: {\r\n                    setAnswer,\r\n                    setChecked,\r\n                    handleActiveExercise\r\n                },\r\n                constants: {\r\n\r\n                }\r\n            }}>\r\n                {props.children}\r\n            </Context.Provider>\r\n        )\r\n\r\n}\r\n\r\nexport default MyProvider;","import React from \"react\";\r\nimport {makeStyles, Typography} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '3rem',\r\n    },\r\n    exercise: {\r\n        fontSize: '20rem'\r\n    }\r\n}));\r\n\r\nconst Exercise = ({first,sign,second,result, answer}) => {\r\n\r\n    const {root, exercise} = useStyles()\r\n\r\n    return (\r\n        <div className={root}>\r\n            <Typography className={exercise} component={\"h2\"} align={\"center\"}>\r\n                {first} {sign} {second} = {answer}\r\n            </Typography>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Exercise;","import React from \"react\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    button: {\r\n        fontSize: '5rem',\r\n        minWidth: '4rem',\r\n        padding: '2rem',\r\n        '& span': {\r\n            lineHeight: 1\r\n        }\r\n    },\r\n    icon: {\r\n        fontSize: '10rem'\r\n    },\r\n    refresh: {\r\n        position: \"absolute\",\r\n        right: '10%',\r\n        bottom: '10%',\r\n        zIndex: 10,\r\n        '& svg': {\r\n            fontSize: '8rem',\r\n        },\r\n    }\r\n}));\r\n\r\nconst Buttons = ({numbers,answer, setAnswer, setChecked, handleActiveExercise})=>{\r\n\r\n    const {root, button, icon, refresh} = useStyles()\r\n\r\n    const handleClick = (val) =>{\r\n\r\n        if(answer.toString().length >= 3) return\r\n\r\n        setAnswer(answer + val)\r\n    }\r\n\r\n    const buttons = numbers.map((val,i)=><Button className={button} key={i} onClick={()=>{handleClick(val)}}>{val}</Button>)\r\n\r\n    return (\r\n        <div className={root}>\r\n            <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n                {buttons}\r\n            </ButtonGroup>\r\n            <ButtonGroup  variant=\"text\">\r\n                <Button onClick={()=>{setChecked(true)}}>\r\n                    <CheckCircleIcon style={{color: 'darkgreen'}} className={icon} />\r\n                </Button>\r\n                <Button onClick={()=>setAnswer('')}>\r\n                    <BackspaceIcon style={{color: 'red'}} className={icon} />\r\n                </Button>\r\n            </ButtonGroup>\r\n\r\n            <Button className={refresh} onClick={handleActiveExercise}>\r\n                <CachedIcon color={\"primary\"}/>\r\n            </Button>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Buttons;","import React, {useContext} from \"react\";\r\n\r\nimport {Container, Grid, makeStyles} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Exercise from \"./Components/Exercise\";\r\nimport Buttons from \"./Components/Buttons\";\r\nimport Context from \"../Context\";\r\n\r\nconst useStyle = makeStyles(theme=>({\r\n    paper: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    empty: {\r\n\r\n    },\r\n    correct: {\r\n        backgroundColor: '#0064002e',\r\n        border: '3px solid green'\r\n    },\r\n    wrong: {\r\n        backgroundColor: '#ff787878',\r\n        border: '3px solid red'\r\n    }\r\n}))\r\n\r\nconst Game = () =>{\r\n\r\n    const classes = useStyle()\r\n    const {paper} = useStyle()\r\n\r\n    const ContextData = useContext(Context)\r\n    const {data} = ContextData\r\n    const {methods} = ContextData\r\n\r\n    const answerClass = () =>{\r\n\r\n        if(data.answer === '' || data.checked===false){\r\n            return 'empty'\r\n        }\r\n        else if(data.answer === data.exercise.result.toString()){\r\n            return 'correct'\r\n        }\r\n        else{\r\n            return 'wrong'\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline/>\r\n            <Container component={'main'} fixed>\r\n                <Paper\r\n                    className={paper + ' ' + classes[answerClass()]}\r\n                    variant={\"elevation\"}\r\n                    elevation={3}\r\n                >\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <Exercise\r\n                                {...data.exercise}\r\n                                answer={data.answer}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Buttons\r\n                                numbers={[0,1,2,3,4,5,6,7,8,9]}\r\n                                answer={data.answer}\r\n                                setAnswer={methods.setAnswer}\r\n                                setChecked={methods.setChecked}\r\n                                handleActiveExercise={methods.handleActiveExercise}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Game;","import 'fontsource-roboto';\n\nimport React from \"react\";\n\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\n\nimport logo from './logo.svg';\nimport './App.css';\n\nimport LoginForm from './Layouts/LoginForm'\nimport SignForm from \"./Layouts/SignForm\";\nimport AddressForm from \"./Layouts/AddressForm\";\nimport Checkout from \"./Layouts/Checkout\";\nimport CustomContainer from \"./Moje/CustomContainer\";\n\nimport MyProvider from \"./Provider\";\n\nimport Game from \"./Game/Game\";\nimport {makeStyles} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minHeight: '100vh',\n        display: \"flex\",\n        justifyContent: 'center',\n        alignItems: \"center\"\n    },\n\n}));\n\nfunction App() {\n\n   const {root} = useStyles()\n\n  return (\n    <div className={root}>\n      {/*<LoginForm />*/}\n      {/*<SignForm />*/}\n      {/*<Checkout />*/}\n\n      <MyProvider>\n\n          <Router>\n              <Switch>\n                  <Route exact path={'/'}>\n                      <Game/>\n                  </Route>\n                  <Route exact path={'/test'}>\n                      <CustomContainer/>\n                  </Route>\n              </Switch>\n          </Router>\n\n      </MyProvider>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}