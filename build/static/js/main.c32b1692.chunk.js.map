{"version":3,"sources":["Context.js","Game/Exercises/mathMultiplication.js","Game/Exercises/polishReading.js","Provider.js","Moje/BigForm.js","Moje/CustomContainer.js","Game/Auth/AddUser.js","Game/ComponentsStartView/ReadingLinkCard.js","Game/ComponentsStartView/MultiplicationLinkCard.js","Game/StartView.js","Game/ComponentsPolish/Exercise.js","Game/ComponentsPolish/Buttons.js","Game/Polish.js","Game/UserList.js","Game/ComponentsMath/Exercise.js","Game/ComponentsMath/Buttons.js","Game/Math.js","Game/RouteParams.js","App.js","reportWebVitals.js","index.js"],"names":["Context","createContext","mathMultiplicationGenerateExercises","max","firstColumn","secondColumn","data","i","j","push","first","sign","second","result","exercises","proste","text","question","answers","correctAnswer","polishReadingExercises","type","MyProvider","props","useState","exercisesList","setExercisesList","exercise","setExercise","answer","setAnswer","setCorrectAnswer","checked","setChecked","userId","setUserId","visit","setVisit","category","subcategory","routerParams","setRouterParams","isAnswerCorrect","handleActiveExercise","_","sample","postVisit","a","axios","post","id","postAnswer","isCorrect","visitId","console","log","useEffect","setTimeout","Provider","value","answerClass","methods","handleGenerateExercises","subject","constants","children","GreenSwitch","withStyles","switchBase","color","green","backgroundColor","track","Switch","BigForm","name","surname","email","remember","day","hour","reason","gender","button","formData","setFormData","handleData","target","prevState","Typography","component","variant","align","data-testid","Grid","container","spacing","item","xs","sm","lg","TextField","fullWidth","label","onInput","FormControlLabel","control","Checkbox","onClick","md","FormControl","InputLabel","Select","role","labelId","onChange","MenuItem","multiple","renderValue","selected","join","indexOf","ListItemText","primary","map","val","FormLabel","RadioGroup","aria-label","Radio","FormGroup","Button","ButtonGroup","useStyle","makeStyles","theme","paper","padding","CustomContainer","CssBaseline","Container","fixed","Paper","className","elevation","AddUser","ContextData","useContext","getUserId","to","useStyles","root","maxWidth","media","height","ReadingLinkCard","classes","Card","CardActionArea","CardHeader","title","subheader","Link","href","CardMedia","Skeleton","width","CardContent","CardActions","MultiplicationLinkCard","setI","setJ","setMax","maxValues","ijValues","ii","e","margin","StartView","useParams","user","alignItems","justify","fontSize","quest","fontWeight","Exercise","display","flexDirection","minWidth","lineHeight","buttonChecked","icon","refresh","position","right","bottom","zIndex","Buttons","buttons","handleAnswerButtonsClick","style","justifyContent","marginBottom","card","textAlign","avatar","empty","correct","border","wrong","Polish","numbers","handlePostAnswer","toString","length","Math","RouteParams","routeParams","minHeight","overflow","App","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c32b1692.chunk.js","sourcesContent":["import React, {createContext} from 'react'\r\n\r\nconst Context = new createContext()\r\n\r\nexport default Context;","const mathMultiplicationGenerateExercises = (max, firstColumn, secondColumn)=>{\r\n\r\n    let data = [];\r\n\r\n    for (let i=firstColumn; i <=10; i++){\r\n        for(let j=secondColumn; j <=10; j++){\r\n            if(i*j<=max){\r\n                data.push({\r\n                    first: i,\r\n                    sign: '·',\r\n                    second: j,\r\n                    result: i*j\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    return data;\r\n\r\n}\r\n\r\nexport {mathMultiplicationGenerateExercises}","const exercises = {\r\n\r\n    proste: [\r\n        {\r\n            text: 'Biały kot je z miski.',\r\n            question: 'Jakiego koloru jest kot?',\r\n            answers: ['czarny','biały','bury'],\r\n            correctAnswer: 'biały'\r\n        },\r\n        {\r\n            text: 'Czarny kot je z miski.',\r\n            question: 'Jakiego koloru jest kot?',\r\n            answers: ['czarny','biały','bury'],\r\n            correctAnswer: 'czarny'\r\n        },\r\n        {\r\n            text: 'Bury kot je z miski.',\r\n            question: 'Jakiego koloru jest kot?',\r\n            answers: ['czarny','biały','bury'],\r\n            correctAnswer: 'bury'\r\n        },\r\n    ]\r\n\r\n}\r\n\r\nconst polishReadingExercises = type => {\r\n    return exercises[type]\r\n}\r\n\r\nexport {polishReadingExercises}","import React, {Component, useEffect, useState} from 'react'\r\n\r\nimport ReactDOM from \"react-dom\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nimport Context from \"./Context\";\r\nimport axios from \"axios\";\r\nimport _ from 'lodash';\r\n\r\nimport {mathMultiplicationGenerateExercises} from \"./Game/Exercises/mathMultiplication\";\r\nimport {polishReadingExercises} from \"./Game/Exercises/polishReading\";\r\n\r\nconst MyProvider = (props) => {\r\n\r\n\r\n        // *** STATE\r\n\r\n        // TODO dane zwiazane z rozwiazanie zadania opakowac w jeden state ???\r\n        // ***** Exercise\r\n        const [exercisesList, setExercisesList] = useState([])\r\n        const [exercise, setExercise] = useState({})\r\n\r\n        const [answer, setAnswer] = useState('')\r\n        const [correctAnswer, setCorrectAnswer] = useState('')\r\n\r\n        const [checked, setChecked] = useState(false)\r\n\r\n        // ***** Auth\r\n        const [userId, setUserId] = useState('')\r\n        const [visit, setVisit] = useState('')\r\n\r\n\r\n        // ***** Router params\r\n\r\n        const [routerParams, setRouterParams] = useState({\r\n            userId: '',\r\n            category: '', //TODO np polski, matematyka\r\n            subcategory: '' //TODO np mnozenie, czytanie\r\n        })\r\n\r\n        // *************************************************************\r\n\r\n        // *** GETTERS\r\n\r\n        const isAnswerCorrect = () => {\r\n            return answer !== '' && answer === correctAnswer\r\n        }\r\n\r\n        const answerClass = () => {\r\n            if(checked === false){\r\n                return 'empty'\r\n            }\r\n            else if(isAnswerCorrect()){\r\n                return 'correct'\r\n            }\r\n            else{\r\n                return 'wrong'\r\n            }\r\n        }\r\n\r\n        // *************************************************************\r\n\r\n        // *** METHODS\r\n\r\n        const handleGenerateExercises = (subject,type,max,i=null,j=null)=>{\r\n           switch (subject) {\r\n               case 'matematyka':\r\n                   switch (type) {\r\n                       case 'mnozenie':\r\n                           setExercisesList(mathMultiplicationGenerateExercises(max,i,j))\r\n                           break;\r\n                   }\r\n                   break;\r\n               case 'polski':\r\n                   switch (type) {\r\n                       case 'czytanie':\r\n                           setExercisesList(polishReadingExercises(max))\r\n                           break;\r\n                   }\r\n                   break;\r\n           }\r\n        }\r\n\r\n        const handleActiveExercise = () => {\r\n            setAnswer('')\r\n            setChecked(false)\r\n            setExercise(_.sample(exercisesList))\r\n        }\r\n\r\n        const postVisit = async () => {\r\n            const {data} = await axios.post('http://localhost:5000/dashboard/visit', {userId})\r\n            setVisit(data.id)\r\n        }\r\n\r\n        //TODO dodac dla j.polskiego !!!!!!!!!!!!!\r\n        const postAnswer = async (text) => {\r\n            const {data} = await axios.post('http://localhost:5000/dashboard/answer',{\r\n                category: routerParams.category,\r\n                subcategory: routerParams.subcategory,\r\n                text: text,\r\n                answer: answer,\r\n                isCorrect: isAnswerCorrect(),\r\n                visitId: visit\r\n            })\r\n            console.log(data)\r\n        }\r\n\r\n        // *** HOOKS\r\n        // * useEffect\r\n        useEffect(()=>{\r\n            (async ()=>{\r\n                if(userId){\r\n                    await postVisit()\r\n                }\r\n            })()\r\n        },[userId])\r\n\r\n        useEffect(()=>{\r\n            if(!userId){\r\n                setUserId(routerParams.userId)\r\n            }\r\n        },[routerParams])\r\n\r\n        useEffect(()=>{\r\n            handleActiveExercise()\r\n        },[exercisesList])\r\n\r\n        useEffect(()=>{\r\n            setChecked(false)\r\n        },[answer])\r\n\r\n        useEffect(()=>{\r\n            if(isAnswerCorrect()) {\r\n                setTimeout(handleActiveExercise,1000)\r\n            }\r\n        },[checked])\r\n\r\n    return(\r\n            <Context.Provider value={{\r\n                data: {\r\n                    userId,\r\n                    exercise,\r\n                    correctAnswer,\r\n                    answer,\r\n                    checked,\r\n                    isAnswerCorrect: isAnswerCorrect(),\r\n                    answerClass: answerClass()\r\n                },\r\n                methods: {\r\n                    setUserId,\r\n                    handleGenerateExercises,\r\n                    setCorrectAnswer,\r\n                    setAnswer,\r\n                    setChecked,\r\n                    handleActiveExercise,\r\n                    setRouterParams,\r\n                    postAnswer\r\n                },\r\n                constants: {\r\n\r\n                }\r\n            }}>\r\n                {props.children}\r\n            </Context.Provider>\r\n        )\r\n\r\n}\r\n\r\nexport default MyProvider;","/*\r\n* TODO:\r\n*  napisac jakas automatyczna walidacje\r\n* */\r\n\r\nimport React, {useState} from \"react\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\n\r\nimport {FormControl, FormLabel, Grid, Radio, Typography} from \"@material-ui/core\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport {MenuOpen} from \"@material-ui/icons\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\r\nimport FormGroup from \"@material-ui/core/FormGroup\";\r\nimport Switch from \"@material-ui/core/Switch\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\n\r\nconst GreenSwitch = withStyles({\r\n    switchBase: {\r\n        color: green[300],\r\n        '&$checked': {\r\n            color: green[500],\r\n        },\r\n        '&$checked + $track': {\r\n            backgroundColor: green[500],\r\n        },\r\n    },\r\n    checked: {},\r\n    track: {},\r\n})(Switch)\r\n\r\nconst BigForm = () => {\r\n\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        surname: '',\r\n        email: '',\r\n        remember: true,\r\n        day: '',\r\n        hour: [],\r\n        reason: [],\r\n        gender: '',\r\n        color: '',\r\n        button: '',\r\n    })\r\n\r\n    const handleData = ({target}) => {\r\n\r\n        console.log(target)\r\n\r\n        if (target.type === 'checkbox' && target.name !== 'color') {\r\n            setFormData(prevState => ({\r\n                ...prevState,\r\n                [target.name]: !prevState[target.name]\r\n            }))\r\n        } else {\r\n            setFormData(prevState => ({\r\n                ...prevState,\r\n                [target.name]: target.value\r\n            }))\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Typography\r\n                component={\"h1\"}\r\n                variant={\"h4\"}\r\n                align={\"center\"}\r\n            >\r\n                Big Form\r\n            </Typography>\r\n            <form data-testid=\"form\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            name={'name'}\r\n                            label={'name'}\r\n                            onInput={handleData}\r\n                            value={formData.name}\r\n                        />\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            name={'surname'}\r\n                            label={'surname'}\r\n                            onInput={handleData}\r\n                            value={formData.surname}\r\n                        />\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <TextField\r\n                            fullWidth\r\n                            name={'email'}\r\n                            label={'email'}\r\n                            onInput={handleData}\r\n                            value={formData.email}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <Typography id={'name-text'} component={'p'} variant={\"h6\"}>\r\n                            {formData.name}\r\n                        </Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <Typography component={'p'} variant={\"h6\"}>\r\n                            {formData.surname}\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <Typography component={'p'} variant={\"h6\"}>\r\n                            {formData.email}\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n\r\n                <Grid item xs={12}>\r\n                    <FormControlLabel\r\n                        control={\r\n                            <Checkbox\r\n                                checked={formData.remember}\r\n                                color={\"primary\"}\r\n                                value={'remember'}\r\n                                name={'remember'}\r\n                                onClick={handleData}\r\n                            />\r\n                        }\r\n                        label=\"Remember me!\"\r\n                    />\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <FormControl\r\n                            fullWidth\r\n                        >\r\n                            {/*TODO zwykły select*/}\r\n                            <InputLabel id={'day-label'}>Day</InputLabel>\r\n                            <Select\r\n                                role={'listbox'}\r\n                                name={'day'}\r\n                                labelId={'day-label'}\r\n                                id={'select-day'}\r\n                                onChange={handleData}\r\n                                value={formData.day}\r\n                            >\r\n                                <MenuItem value={1}>Monday</MenuItem>\r\n                                <MenuItem value={2}>Tuesday</MenuItem>\r\n                                <MenuItem value={3}>Wednesday</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id={'hour-label'}>Hour</InputLabel>\r\n                            <Select\r\n                                multiple\r\n                                role={'listbox'}\r\n                                name={'hour'}\r\n                                labelId={'hour-label'}\r\n                                id={'select-hour'}\r\n                                onChange={handleData}\r\n                                value={formData.hour}\r\n                            >\r\n                                <MenuItem value={12}>12</MenuItem>\r\n                                <MenuItem value={13}>13</MenuItem>\r\n                                <MenuItem value={14}>14</MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} md={4}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel id={'reason-label'}>Reason</InputLabel>\r\n                            <Select\r\n                                multiple\r\n                                role={'listbox'}\r\n                                name={'reason'}\r\n                                labelId={'reason-label'}\r\n                                id={'select-reason'}\r\n                                onChange={handleData}\r\n                                value={formData.reason}\r\n                                renderValue={(selected) => selected.join(', ')}\r\n                            >\r\n                                <MenuItem value={'appointment'}>\r\n                                    <Checkbox checked={formData.reason.indexOf('appointment') > -1}/>\r\n                                    <ListItemText primary={'appointment'}/>\r\n                                </MenuItem>\r\n                                <MenuItem value={'special offer'}>\r\n                                    <Checkbox checked={formData.reason.indexOf('special offer') > -1}/>\r\n                                    <ListItemText primary={'special offer'}/>\r\n                                </MenuItem>\r\n                                <MenuItem value={'test'}>\r\n                                    <Checkbox checked={formData.reason.indexOf('test') > -1}/>\r\n                                    <ListItemText primary={'test'}/>\r\n                                </MenuItem>\r\n                            </Select>\r\n                        </FormControl>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <Typography id={'name-text'} component={'p'} variant={\"h6\"}>\r\n                            {formData.day}\r\n                        </Typography>\r\n\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <Typography component={'p'} variant={\"h6\"}>\r\n                            {\r\n                                formData.hour.map(val => val + ', ')\r\n                            }\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <Typography component={'p'} variant={\"h6\"}>\r\n                            {\r\n                                formData.reason.map(val => val + ', ')\r\n                            }\r\n                        </Typography>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <FormControl fullWidth component={'fieldset'}>\r\n                            <FormLabel component={'legend'}>Gender</FormLabel>\r\n                            <RadioGroup\r\n                                aria-label={'gender'}\r\n                                name={'gender'}\r\n                                value={formData.gender}\r\n                                onChange={handleData}\r\n                            >\r\n                                <FormControlLabel value={'female'} control={<Radio/>} label={'Female'}/>\r\n                                <FormControlLabel value={'male'} control={<Radio/>} label={'Male'}/>\r\n                            </RadioGroup>\r\n                        </FormControl>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <FormGroup>\r\n                            <FormControlLabel control={\r\n                                <Switch\r\n                                    name={'color'}\r\n                                    color={''}\r\n                                    value={'red'}\r\n                                    onChange={handleData}\r\n                                    checked={formData.color === 'red'}\r\n                                />}\r\n                                              label={'Red'}\r\n                            />\r\n                            <FormControlLabel control={\r\n                                <Switch\r\n                                    name={'color'}\r\n                                    color={''}\r\n                                    value={'blue'}\r\n                                    onChange={handleData}\r\n                                    checked={formData.color === 'blue'}\r\n                                />}\r\n                                              label={'Blue'}\r\n                            />\r\n                            <FormControlLabel control={\r\n                                <GreenSwitch\r\n                                    name={'color'}\r\n                                    color={''}\r\n                                    value={'green'}\r\n                                    onChange={handleData}\r\n                                    checked={formData.color === 'green'}\r\n                                />}\r\n                                              label={'Green'}\r\n                            />\r\n                        </FormGroup>\r\n                    </Grid>\r\n                    <Grid item xs={12} sm={6} lg={4}>\r\n                        <Button variant=\"outlined\" color={\"inherit\"} onClick={()=>{handleData({name:'button',target:{value: 'button1'}})}}>Default</Button>\r\n\r\n                        <ButtonGroup color=\"primary\" aria-label=\"outlined primary button group\">\r\n                            <Button onClick={()=>{handleData({target:{name:'button',value: 'button2'}})}}>One</Button>\r\n                            <Button onClick={()=>{handleData({target:{name:'button',value: 'button3'}})}}>Two</Button>\r\n                            <Button onClick={()=>{handleData({target:{name:'button',value: 'button4'}})}}>Three</Button>\r\n                        </ButtonGroup>\r\n                        {formData.button}\r\n                    </Grid>\r\n                </Grid>\r\n            </form>\r\n\r\n\r\n            {/*TODO:  SELECT\r\n                - Dodać style dla wybranych/zaznaczonych opcji\r\n                - ----- zwykły\r\n                - multi\r\n                - z inputem do wybierania\r\n            */}\r\n\r\n            {/*TODO: Dodać radioButtony */}\r\n\r\n\r\n            {/*TODO: Walidacja*/}\r\n\r\n            {/*TODO: Dodać header, footer, menu, sidebar !!!!!!!!!!!!!!  */}\r\n\r\n            {/*TODO: TESTY\r\n                 - czy istnieja inputy/chechboxy z odpowiednim namem\r\n                 - Czy istnieja komponenty np sa 3 <Textfieldy\r\n                 - Czy np formData.name === text w #name-text\r\n            */}\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default BigForm;","/*  TODO:\r\n*   Kontener w ktorym mozna umieszczac kontent : Formularz | Tabela | ??\r\n*   Użyć Paper | Grid  | Typography\r\n*\r\n*   TODO: Zrobić tabele z paginacja (dane tylko z frontu moze)\r\n* */\r\n\r\nimport React from \"react\";\r\n\r\nimport BigForm from \"./BigForm\";\r\n\r\nimport {Container, Grid, makeStyles} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\n\r\nconst useStyle = makeStyles(theme => (\r\n    {\r\n        paper: {\r\n            padding: theme.spacing(2)\r\n        }\r\n    }\r\n))\r\n\r\nconst CustomContainer = () => {\r\n\r\n    const {paper} = useStyle()\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline />\r\n            <Container component={'main'} fixed>\r\n                <Paper\r\n                    className={paper}\r\n                    variant={\"elevation\"}\r\n                    elevation={3}\r\n                >\r\n                    <BigForm/>\r\n                </Paper>\r\n\r\n\r\n            </Container>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default CustomContainer;","import React, {useContext, useEffect} from \"react\";\r\n\r\nimport axios from \"axios\";\r\nimport Context from \"../../Context\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst AddUser = props => {\r\n\r\n    const ContextData = useContext(Context)\r\n\r\n    const getUserId = async () => {\r\n        const {data} = await axios.post('http://localhost:5000/dashboard/user')\r\n        ContextData.methods.setUserId(data.id)\r\n    }\r\n\r\n    useEffect(getUserId,[])\r\n\r\n    return (\r\n        <>\r\n\r\n            {ContextData.data?.userId ? <Redirect to={`${ContextData.data?.userId}`} /> : <p>----------</p>}\r\n\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default AddUser;","import React from 'react';\r\n// import {\r\n//     Link\r\n// } from \"react-router-dom\";\r\n\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\nconst ReadingLinkCard = ({userId}) => {\r\n    const classes = useStyles();\r\n\r\n    // const preventDefault = (event) => event.preventDefault();\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardHeader\r\n                    // action={\r\n                    //     <IconButton aria-label=\"settings\">\r\n                    //         <MoreVertIcon />\r\n                    //     </IconButton>\r\n                    // }\r\n                    title={'Czytanie ze zrozumieniem'}\r\n                    subheader={\"Wybierz poziom trudności!\"}\r\n                />\r\n                <Link href={`#/${userId}/polski/czytanie/proste`} color={\"inherit\"}>\r\n                    {/*<CardMedia*/}\r\n                    {/*    className={classes.media}*/}\r\n                    {/*    image=\"https://picsum.photos/200/300\"*/}\r\n                    {/*/>*/}\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                    >\r\n                        <Skeleton variant=\"text\" width={'100%'} height={118} />\r\n                    </CardMedia>\r\n                    <CardContent>\r\n                        {/*<Typography gutterBottom variant=\"h5\" component=\"h2\">*/}\r\n                        {/*    Lizard*/}\r\n                        {/*</Typography>*/}\r\n                        {/*<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">*/}\r\n                        {/*    Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging*/}\r\n                        {/*    across all continents except Antarctica*/}\r\n                        {/*</Typography>*/}\r\n                    </CardContent>\r\n                </Link>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                {/*<Button size=\"small\" color=\"primary\">*/}\r\n                {/*    Share*/}\r\n                {/*</Button>*/}\r\n                {/*<Button size=\"small\" color=\"primary\">*/}\r\n                {/*    Learn More*/}\r\n                {/*</Button>*/}\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ReadingLinkCard;","import React, {useState} from 'react';\r\n// import {\r\n//     Link\r\n// } from \"react-router-dom\";\r\n\r\nimport Link from '@material-ui/core/Link';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActionArea from '@material-ui/core/CardActionArea';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport Skeleton from \"@material-ui/lab/Skeleton\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {FormControl} from \"@material-ui/core\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        maxWidth: 345,\r\n    },\r\n    media: {\r\n        height: 140,\r\n    },\r\n});\r\n\r\nconst MultiplicationLinkCard = ({userId}) => {\r\n    const classes = useStyles();\r\n\r\n    const [i,setI] = useState(1)\r\n    const [j,setJ] = useState(1)\r\n    const [max,setMax] = useState(100)\r\n\r\n    // const preventDefault = (event) => event.preventDefault();\r\n\r\n    let maxValues = []\r\n    let ijValues = []\r\n    for (let ii = 1; ii<=100; ii++){\r\n        maxValues.push(ii)\r\n        if(ii<=10){\r\n            ijValues.push(ii)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardActionArea>\r\n                <CardHeader\r\n                    // action={\r\n                    //     <IconButton aria-label=\"settings\">\r\n                    //         <MoreVertIcon />\r\n                    //     </IconButton>\r\n                    // }\r\n                    title={'Mnożenie'}\r\n                    subheader={\"Ustaw zakres działań!\"}\r\n                />\r\n                <Link href={`#/${userId}/matematyka/mnozenie/${max}/${i}/${j}`} color={\"inherit\"}>\r\n                    {/*<CardMedia*/}\r\n                    {/*    className={classes.media}*/}\r\n                    {/*    image=\"https://picsum.photos/200/300\"*/}\r\n                    {/*/>*/}\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                    >\r\n                        <Skeleton variant=\"text\" width={'100%'} height={118} />\r\n                    </CardMedia>\r\n                    <CardContent>\r\n                        {/*<Typography gutterBottom variant=\"h5\" component=\"h2\">*/}\r\n                        {/*    Lizard*/}\r\n                        {/*</Typography>*/}\r\n                        {/*<Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">*/}\r\n                        {/*    Lizards are a widespread group of squamate reptiles, with over 6,000 species, ranging*/}\r\n                        {/*    across all continents except Antarctica*/}\r\n                        {/*</Typography>*/}\r\n                    </CardContent>\r\n                </Link>\r\n            </CardActionArea>\r\n            <CardActions>\r\n                <FormControl fullWidth>\r\n                    <InputLabel id={'max-label'}>Wartość maksymalna</InputLabel>\r\n                    <Select\r\n                        role={'listbox'}\r\n                        name={'max'}\r\n                        labelId={'max-label'}\r\n                        id={'select-max'}\r\n                        onChange={(e)=>{setMax(e.target.value)}}\r\n                        value={max}\r\n                    >\r\n                        {\r\n                            maxValues.map(val=>(\r\n                                <MenuItem value={val}>{val}</MenuItem>\r\n                            ))\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <FormControl fullWidth>\r\n                    <InputLabel id={'i-label'}></InputLabel>\r\n                    <Select\r\n                        role={'listbox'}\r\n                        name={'i'}\r\n                        labelId={'i-label'}\r\n                        id={'select-i'}\r\n                        onChange={(e)=>{setI(e.target.value)}}\r\n                        value={i}\r\n                    >\r\n                        {\r\n                            ijValues.map(val=>(\r\n                                <MenuItem value={val}>{val}</MenuItem>\r\n                            ))\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n\r\n                <FormControl fullWidth>\r\n                    <InputLabel id={'j-label'}></InputLabel>\r\n                    <Select\r\n                        role={'listbox'}\r\n                        name={'j'}\r\n                        labelId={'j-label'}\r\n                        id={'select-j'}\r\n                        onChange={(e)=>{setJ(e.target.value)}}\r\n                        value={j}\r\n                    >\r\n                        {\r\n                            ijValues.map(val=>(\r\n                                <MenuItem value={val}>{val}</MenuItem>\r\n                            ))\r\n                        }\r\n                    </Select>\r\n                </FormControl>\r\n\r\n            </CardActions>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default MultiplicationLinkCard;","import React, {useContext} from \"react\";\r\n\r\nimport {\r\n    Link, useParams\r\n} from \"react-router-dom\";\r\n\r\nimport {Grid} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nimport ReadingLinkCard from \"./ComponentsStartView/ReadingLinkCard\";\r\nimport MultiplicationLinkCard from \"./ComponentsStartView/MultiplicationLinkCard\";\r\nimport Context from \"../Context\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n}));\r\n\r\nconst StartView = () =>{\r\n\r\n    const {root} = useStyles();\r\n\r\n    const ContextData = useContext(Context)\r\n\r\n    // *** ROUTER PARAMS\r\n    const {user} = useParams();\r\n    // ***\r\n\r\n    return (\r\n        <Grid className={root} container alignItems={\"center\"} justify={\"center\"} spacing={1}>\r\n            <MultiplicationLinkCard userId={ContextData.data.userId} />\r\n            <ReadingLinkCard userId={ContextData.data.userId} />\r\n            {/*<ReadingLinkCard path={''} />*/}\r\n        </Grid>\r\n    )\r\n\r\n}\r\n\r\nexport default StartView;","import React from \"react\";\r\nimport {makeStyles, Typography} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2rem',\r\n    },\r\n    exercise: {\r\n        fontSize: '3rem'\r\n    },\r\n    quest: {\r\n        fontSize: '2rem',\r\n        fontWeight: \"bolder\"\r\n    },\r\n}));\r\n\r\nconst Exercise = ({text,question,answers,correctAnswer}) => {\r\n\r\n    const {root, exercise, quest} = useStyles()\r\n\r\n    return (\r\n        <div className={root}>\r\n            <Typography className={exercise} component={\"h2\"} align={\"left\"}>\r\n                {text}\r\n            </Typography>\r\n            <Typography className={quest} component={\"h2\"} align={\"left\"}>\r\n                {question}\r\n            </Typography>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Exercise;","import React from \"react\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\n\r\nimport _ from 'lodash';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    button: {\r\n        fontSize: '1.5rem',\r\n        minWidth: '2rem',\r\n        padding: '1rem',\r\n        '& span': {\r\n            lineHeight: 1\r\n        }\r\n    },\r\n    buttonChecked : {\r\n        backgroundColor: 'darkgreen'\r\n    },\r\n    icon: {\r\n        fontSize: '5rem'\r\n    },\r\n    refresh: {\r\n        position: \"absolute\",\r\n        right: '10%',\r\n        bottom: '10%',\r\n        zIndex: 10,\r\n        '& svg': {\r\n            fontSize: '4rem',\r\n        },\r\n    }\r\n}));\r\n\r\nconst Buttons = ({answers, answer, setAnswer, setChecked, handleActiveExercise})=>{\r\n\r\n    const {root, button, icon, refresh, buttonChecked} = useStyles()\r\n\r\n    const handleAnswerButtonsClick = (val) =>{\r\n        setAnswer(val)\r\n    }\r\n\r\n    const handleCheckButton = () =>{\r\n        setChecked(true)\r\n    }\r\n    const handleClearButton = () =>{\r\n        setChecked(false)\r\n        setAnswer('')\r\n    }\r\n\r\n    const buttons = answers.map((val,i)=>(\r\n        <Button\r\n            className={[button,answer===val?buttonChecked:'']}\r\n            key={i}\r\n            onClick={()=>{handleAnswerButtonsClick(val)}}\r\n        >\r\n            {val}\r\n        </Button>\r\n    ))\r\n\r\n    return (\r\n        <div className={root}>\r\n            <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n                {buttons}\r\n            </ButtonGroup>\r\n            <ButtonGroup  variant=\"text\">\r\n                <Button onClick={handleCheckButton}>\r\n                    <CheckCircleIcon style={{color: 'darkgreen'}} className={icon} />\r\n                </Button>\r\n                <Button onClick={handleClearButton}>\r\n                    <BackspaceIcon style={{color: 'red'}} className={icon} />\r\n                </Button>\r\n            </ButtonGroup>\r\n\r\n            <Button className={refresh} onClick={handleActiveExercise}>\r\n                <CachedIcon color={\"primary\"}/>\r\n            </Button>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Buttons;","import React, {useContext, useEffect} from \"react\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nimport {Container, Grid, makeStyles} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Context from \"../Context\";\r\n\r\nimport Exercise from \"./ComponentsPolish/Exercise\";\r\nimport Buttons from \"./ComponentsPolish/Buttons\";\r\nimport UserList from \"./UserList\";\r\n\r\nconst useStyle = makeStyles(theme=>({\r\n    paper: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    empty: {\r\n\r\n    },\r\n    correct: {\r\n        backgroundColor: '#0064002e',\r\n        border: '3px solid green'\r\n    },\r\n    wrong: {\r\n        backgroundColor: '#ff787878',\r\n        border: '3px solid red'\r\n    }\r\n}))\r\n\r\nconst Polish = () =>{\r\n\r\n    const classes = useStyle()\r\n    const {paper} = useStyle()\r\n\r\n    const ContextData = useContext(Context)\r\n\r\n    const {type,max} = useParams()\r\n\r\n    const {data} = ContextData\r\n    const {methods} = ContextData\r\n\r\n\r\n    useEffect(()=>{\r\n        methods.handleGenerateExercises('polski',type, max)\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        methods.setCorrectAnswer(data.exercise?.correctAnswer)\r\n    },[data.exercise])\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline/>\r\n            <Container component={'main'} fixed>\r\n\r\n                {/*<UserList />*/}\r\n\r\n                <Paper\r\n                    className={paper + ' ' + classes[data.answerClass]}\r\n                    variant={\"elevation\"}\r\n                    elevation={3}\r\n                >\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <Exercise\r\n                                {...data.exercise}\r\n                                answer={data.answer}\r\n                            />\r\n                        </Grid>\r\n                        {data.exercise?.answers && <Grid item xs={12}>\r\n                            <Buttons\r\n                                answers={data.exercise.answers}\r\n                                answer={data.answer}\r\n                                setAnswer={methods.setAnswer}\r\n                                setChecked={methods.setChecked}\r\n                                handleActiveExercise={methods.handleActiveExercise}\r\n                            />\r\n                        </Grid>}\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Polish;","import React from \"react\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport FaceIcon from '@material-ui/icons/Face';\r\nimport Rating from \"@material-ui/lab/Rating\";\r\n\r\nconst useStyles = makeStyles(theme=>({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginBottom: '2rem',\r\n\r\n    },\r\n    card: {\r\n        textAlign: 'center'\r\n    },\r\n    avatar: {\r\n        fontSize: '5rem'\r\n    }\r\n}))\r\n\r\nconst users = [\r\n    {\r\n        number: 1,\r\n        initials: 'A.K.',\r\n        points: 1\r\n    },\r\n    {\r\n        number: 2,\r\n        initials: 'L.G.',\r\n        points: 3\r\n    },\r\n    {\r\n        number: 3,\r\n        initials: 'A.T.',\r\n        points: 5\r\n    }\r\n]\r\n\r\n\r\nconst UserList = () => {\r\n\r\n    const {root, card, avatar} = useStyles()\r\n\r\n\r\n    const userCards = users.map(({number,initials,points})=>(\r\n        <Card variant=\"outlined\" className={card}>\r\n            <CardContent>\r\n                <FaceIcon className={avatar} />\r\n                <Typography>\r\n                    {number}\r\n                </Typography>\r\n                <Typography>\r\n                    {initials}\r\n                </Typography>\r\n                <Rating name=\"read-only\" value={points} readOnly />\r\n            </CardContent>\r\n        </Card>\r\n    ))\r\n\r\n    return(\r\n        <div className={root}>\r\n\r\n            {userCards}\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default UserList;","import React from \"react\";\r\nimport {makeStyles, Typography} from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '1.5rem',\r\n    },\r\n    exercise: {\r\n        fontSize: '10rem'\r\n    }\r\n}));\r\n\r\nconst Exercise = ({first,sign,second,result, answer}) => {\r\n\r\n    const {root, exercise} = useStyles()\r\n\r\n    return (\r\n        <div className={root}>\r\n            <Typography className={exercise} component={\"h2\"} align={\"center\"}>\r\n                {first} {sign} {second} = {answer}\r\n            </Typography>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Exercise;","import React from \"react\";\r\nimport ButtonGroup from \"@material-ui/core/ButtonGroup\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {makeStyles} from \"@material-ui/core\";\r\n\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport BackspaceIcon from '@material-ui/icons/Backspace';\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        '& > *': {\r\n            margin: theme.spacing(1),\r\n        },\r\n    },\r\n    button: {\r\n        fontSize: '2.5rem',\r\n        minWidth: '2rem',\r\n        padding: '1rem',\r\n        '& span': {\r\n            lineHeight: 1\r\n        }\r\n    },\r\n    icon: {\r\n        fontSize: '5rem'\r\n    },\r\n    refresh: {\r\n        position: \"absolute\",\r\n        right: '10%',\r\n        bottom: '10%',\r\n        zIndex: 10,\r\n        '& svg': {\r\n            fontSize: '8rem',\r\n        },\r\n    }\r\n}));\r\n\r\nconst Buttons = ({numbers,answer, setAnswer, setChecked, handleActiveExercise, handlePostAnswer})=>{\r\n\r\n    const {root, button, icon, refresh} = useStyles()\r\n\r\n    const handleAnswerButtonsClick = (val) =>{\r\n\r\n        if(answer.toString().length >= 3) return\r\n\r\n        setAnswer(answer + val)\r\n    }\r\n\r\n    const handleCheckButton = () =>{\r\n            setChecked(true)\r\n            handlePostAnswer()\r\n    }\r\n    const handleClearButton = () =>{\r\n        setChecked(false)\r\n        setAnswer('')\r\n    }\r\n\r\n    const buttons = numbers.map((val,i)=><Button className={button} key={i} onClick={()=>{handleAnswerButtonsClick(val)}}>{val}</Button>)\r\n\r\n    return (\r\n        <div className={root}>\r\n            <ButtonGroup variant=\"contained\" color=\"primary\" aria-label=\"contained primary button group\">\r\n                {buttons}\r\n            </ButtonGroup>\r\n            <ButtonGroup  variant=\"text\">\r\n                <Button onClick={handleCheckButton}>\r\n                    <CheckCircleIcon style={{color: 'darkgreen'}} className={icon} />\r\n                </Button>\r\n                <Button onClick={handleClearButton}>\r\n                    <BackspaceIcon style={{color: 'red'}} className={icon} />\r\n                </Button>\r\n            </ButtonGroup>\r\n\r\n            <Button className={refresh} onClick={handleActiveExercise}>\r\n                <CachedIcon color={\"primary\"}/>\r\n            </Button>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Buttons;","import React, {useContext, useEffect} from \"react\";\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nimport {Container, Grid, makeStyles} from \"@material-ui/core\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\n\r\nimport Context from \"../Context\";\r\n\r\nimport Exercise from \"./ComponentsMath/Exercise\";\r\nimport Buttons from \"./ComponentsMath/Buttons\";\r\nimport UserList from \"./UserList\";\r\n\r\nconst useStyle = makeStyles(theme=>({\r\n    paper: {\r\n        padding: theme.spacing(2)\r\n    },\r\n    empty: {\r\n\r\n    },\r\n    correct: {\r\n        backgroundColor: '#0064002e',\r\n        border: '3px solid green'\r\n    },\r\n    wrong: {\r\n        backgroundColor: '#ff787878',\r\n        border: '3px solid red'\r\n    }\r\n}))\r\n\r\nconst Math = () =>{\r\n\r\n    const classes = useStyle()\r\n    const {paper} = useStyle()\r\n\r\n    const ContextData = useContext(Context)\r\n\r\n    const {type,max, i,j} = useParams()\r\n    console.log({j})\r\n\r\n    const {data} = ContextData\r\n    const {methods} = ContextData\r\n\r\n    const handlePostAnswer = () => {\r\n        methods.postAnswer(`${data.exercise.first} ${data.exercise.sign} ${data.exercise.second} = `)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        methods.handleGenerateExercises('matematyka',type,max,i,j)\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        methods.setCorrectAnswer(data.exercise?.result?.toString())\r\n    },[data.exercise])\r\n\r\n    return (\r\n        <>\r\n            <CssBaseline/>\r\n            <Container component={'main'} fixed>\r\n\r\n                {/*<UserList />*/}\r\n\r\n                <Paper\r\n                    className={paper + ' ' + classes[data.answerClass]}\r\n                    variant={\"elevation\"}\r\n                    elevation={3}\r\n                >\r\n                    <Grid container>\r\n                        <Grid item xs={12}>\r\n                            <Exercise\r\n                                {...data.exercise}\r\n                                answer={data.answer}\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <Buttons\r\n                                numbers={[0,1,2,3,4,5,6,7,8,9]}\r\n                                answer={data.answer}\r\n                                setAnswer={methods.setAnswer}\r\n                                setChecked={methods.setChecked}\r\n                                handlePostAnswer={handlePostAnswer}\r\n                                handleActiveExercise={methods.handleActiveExercise}\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Container>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default Math;","import React, {useContext, useEffect} from \"react\";\r\nimport Context from \"../Context\";\r\n\r\nimport {\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nconst RouteParams = () => {\r\n\r\n\r\n    const routeParams = useParams()\r\n    console.log({routeParams})\r\n\r\n    const ContextData = useContext(Context)\r\n\r\n    useEffect(()=>{\r\n        ContextData.methods.setRouterParams(routeParams)\r\n    },[routeParams])\r\n\r\n    return(\r\n        <></>\r\n    )\r\n\r\n}\r\n\r\nexport default RouteParams;","// TODO Przeniesc dane, metody z ContextData do propsow zeby uniezaleznic komponenty i umozliwic testowanie !!!!!\n\nimport 'fontsource-roboto';\nimport React, {useEffect} from \"react\";\nimport {\n    HashRouter as Router,\n    Switch,\n    Route,\n    Link\n} from \"react-router-dom\";\nimport {makeStyles} from \"@material-ui/core\";\nimport './App.css';\n\nimport MyProvider from \"./Provider\";\n\nimport CustomContainer from \"./Moje/CustomContainer\"; //TODO xxx\nimport AddUser from \"./Game/Auth/AddUser\";\nimport StartView from \"./Game/StartView\";\nimport Polish from \"./Game/Polish\";\nimport Math from \"./Game/Math\";\nimport RouteParams from \"./Game/RouteParams\";\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        minHeight: '100vh',\n        display: \"flex\",\n        justifyContent: 'center',\n        alignItems: \"center\",\n        overflow: 'hidden' //FIX bug when select hoover\n    },\n\n}));\n\nfunction App() {\n\n   const {root} = useStyles()\n\n  return (\n    <div className={root}>\n      {/*<LoginForm />*/}\n      {/*<SignForm />*/}\n      {/*<Checkout />*/}\n\n\n        <Router>\n\n            <MyProvider>\n\n                <Route path={'/:userId/:category?/:subcategory?'}>\n                    <RouteParams />\n                </Route>\n\n                <Switch>\n                    <Route exact path={'/'}>\n                        <AddUser/>\n                    </Route>\n                    <Route exact path={'/:userId'}>\n                        <StartView/>\n                    </Route>\n                    <Route exact path={'/:userId/matematyka/:type/:max/:i?/:j?'}>\n                        <Math/>\n                    </Route>\n                    <Route exact path={'/:userId/polski/:type/:max'}>\n                        <Polish/>\n                    </Route>\n                    <Route exact path={'/test'}>\n                        <CustomContainer/>\n                    </Route>\n                </Switch>\n\n            </MyProvider>\n\n        </Router>\n\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}